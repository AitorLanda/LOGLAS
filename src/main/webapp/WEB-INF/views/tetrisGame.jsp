<%@ page contentType="text/html" pageEncoding="UTF-8"%>
<%@ taglib prefix="spring" uri="http://www.springframework.org/tags"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>

<script src="${pageContext.request.contextPath}/resources/core/js/tetris/arena.js" /></script>
<script src="${pageContext.request.contextPath}/resources/core/js/tetris/player.js" /></script>
<script src="${pageContext.request.contextPath}/resources/core/js/tetris/tetris.js" /></script>
<script src="${pageContext.request.contextPath}/resources/core/js/tetris/tetrisController.js" /></script>
<script src="${pageContext.request.contextPath}/resources/core/js/tetris/tetrisConnectionController.js" /></script>
<script src="${pageContext.request.contextPath}/resources/core/js/tetris/events.js" /></script>

<div class="container">
	
	<div>
	Roll: Q   E
	Move: A S D
	</div>
	<div id="gameView">
		
		<!-- autogenerated canvas instances -->
		<!-- autogenerated canvas instances -->
		
	</div>
	
	<!-- HIDDEN FIRST Scoreboard and leave button -->
	<div id="hidden-board">
	
		<h3 id="scoreboardTitle">
	    	<spring:message code="label.scoreBoard" />
		</h3>
		<table id="scoreboard"></table>
		
		<!-- Lobby button -->
	    <div class="my-button">
			<a class="my-button-text" id="leaveLobbyBtn" onclick="sendLeaveMessage()" 
				href="${pageContext.request.contextPath}/lobby/qaScore?id=${lobby.getId()}">
				<span id="my-button-span">
					Leave
				</span>
			</a>
		</div>
		
			
	</div>
	
</div>


<script>
	
	//Initialize tetris games controler (game manager)
	const tetrisController = new TetrisController(document);
	// Create local player instance
	var userId = "${user.getId()}";
	userId = parseInt(userId);
	var lobbyId = "${lobby.getId()}";
	var lobbyint = parseInt(lobbyId);
	const localTetrisGame = tetrisController.createPlayer(userId, lobbyint);
	// Make local canvas noticeable adding local class
	localTetrisGame.element.classList.add('local');
	localTetrisGame.run();
	
	// Connect through websocket
	const connectionController = new TetrisConnectionController(tetrisController);
	connectionController.connect('ws://' + document.location.host + '/POPBL5/lobbychat/' + lobbyId);
	
	/**
	 * Key listener: 
	 * - Move player piece by UP - RIGHT - DOWN arrow keys
	 * - Rotate player piece by Q (left) - W (right)
	 * 
	 * UPDATE: for 2 local players buttons.
	 * 		   Create 2 arrays inside an array, with all the keyCodes inside
	 * 		   Then bind keys
	 * DELETED for online: only one keyset for local
	 */
	const keyListener = (event) => {
		[
			[65, 68, 81, 69, 83],
		].forEach((key, index) => {
			const player = localTetrisGame.player;
			// KEYDOWN ONLY FOR MOVE AND ROTATE
			if (event.type == 'keydown') {
				if (event.keyCode === key[0]) { // MOVE LEFT
					player.moveRight(-1);
				} else if (event.keyCode === key[1]) { // MOVE RIGHT
					player.moveRight(1);
				} else if (event.keyCode === key[2]) { // ROTATE LEFT
					player.rotate(-1);
				} else if (event.keyCode === key[3]) { // ROTATE RIGHT
					player.rotate(1);
				}
			}
			// When moving down 
			if (event.keyCode === key[4]) { // DOWN
				// IF HOLDING DOWN use DROP_FAST speed
				if (event.type === 'keydown') {
					// Ignore if we are already dropping fast
					if (player.dropInterval !== player.DROP_FAST) {
						player.drop();
						player.dropInterval = player.DROP_FAST;
					}
				} else {
					player.dropInterval = player.DROP_SLOW;
				}
			}
		});
	};
	document.addEventListener('keydown', keyListener);
	document.addEventListener('keyup', keyListener);

</script>