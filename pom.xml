<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>edu.mondragon</groupId>
  <artifactId>POPBL5</artifactId>
  <packaging>war</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <name>POPBL5 Maven Webapp</name>
  <url>http://maven.apache.org</url>
  
  
  <!-- Properties for the pom-->
  <properties>
  	  <!-- Path to the doclet tool-->
  	  <yDoc.path>/Users/Xabier/Desktop/Trabajo/Mondra/3.Maila/Web 1/Back End/workspace/loglasDef/yworks-uml-doclet-3.1-jdk1.8</yDoc.path>
  	  
  	  <!-- JDK version-->
  	  <jdk.version>1.8</jdk.version>
  	  <!-- Path to JDK -->
  	  <jdk.path>/usr/lib/jvm/java-1.8-openjdk/bin/javac</jdk.path>
  	 
  	  <!-- Make Maven ignore that web.xml is missing -->
  	  <failOnMissingWebXml>false</failOnMissingWebXml>
	
	  <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>
  
  
  <parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.10.RELEASE</version>
  </parent>
  
  
  <dependencies>
  
  	<!-- Spring Framework -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-webmvc</artifactId>
	</dependency>
  
  	<dependency>
	    <groupId>org.jacoco</groupId>
	    <artifactId>jacoco-maven-plugin</artifactId>
	    <version>0.8.5</version>
	</dependency>

	
	<!-- Spring Framework Boot -->
	<dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter</artifactId>
    </dependency>
    
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-security</artifactId>
	</dependency>
    
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.junit.vintage</groupId>
          <artifactId>junit-vintage-engine</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    
    <dependency>
    	<groupId>org.springframework.boot</groupId>
    	<artifactId>spring-boot-starter-tomcat</artifactId>
	</dependency>
	
    
    <!-- Spring security -->
    <dependency>
	    <groupId>org.springframework.security</groupId>
	    <artifactId>spring-security-web</artifactId>
	</dependency>
	<dependency>
		<groupId>org.springframework.security</groupId>
		<artifactId>spring-security-config</artifactId>
	</dependency>
	
    
	<!-- Tiles for JSP layout templates -->
	<dependency>
    	<groupId>org.apache.tiles</groupId>
    	<artifactId>tiles-jsp</artifactId>
    	<version>3.0.8</version>
	</dependency>

	<!-- For HYBERNATE -->
	<!-- Spring Context -->
    <dependency>
      	<groupId>org.springframework</groupId>
      	<artifactId>spring-context</artifactId>
    </dependency>
    <!-- Spring ORM -->
    <dependency>
      	<groupId>org.springframework</groupId>
      	<artifactId>spring-orm</artifactId>
    </dependency>
    <!-- Mysql Connector -->
    <dependency>
      	<groupId>mysql</groupId>
      	<artifactId>mysql-connector-java</artifactId>
    </dependency>
    <!-- Hibernate 5.3.7 Final -->
    <dependency>
      	<groupId>org.hibernate</groupId>
     	<artifactId>hibernate-core</artifactId>
    </dependency>
    <!-- Hibernate Validator -->
    <dependency>
        <groupId>org.hibernate</groupId>
        <artifactId>hibernate-validator</artifactId>
        <version>5.4.2.Final</version>
    </dependency>
    <!-- Apache Commons DBCP -->
    <dependency>
      	<groupId>org.apache.commons</groupId>
      	<artifactId>commons-dbcp2</artifactId>
    </dependency>
    
    
    
    <!-- Spring websocket exporter -->
	<dependency>
	    <groupId>org.springframework</groupId>
	    <artifactId>spring-websocket</artifactId>
	</dependency>



	<!-- Interprets and compiles JSP -->
	<dependency>
		<groupId>org.apache.tomcat.embed</groupId>
		<artifactId>tomcat-embed-jasper</artifactId>
		<scope>provided</scope>
	</dependency>
  
    <!-- JUnit -->
	<dependency>
  	    <groupId>junit</groupId>
  	    <artifactId>junit</artifactId>
  	    <scope>test</scope>
	</dependency>	
	
	<!-- JSTL -->
    <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>jstl</artifactId>
    </dependency>
    
    <!-- Java Servlet API -->
    <dependency>
		<groupId>javax.servlet</groupId>
		<artifactId>javax.servlet-api</artifactId>
		<scope>provided</scope>
	</dependency>

	<!-- JSON API -->
	<dependency>
	    <groupId>javax.json</groupId>
	    <artifactId>javax.json-api</artifactId>
	</dependency>
	
	<!-- GSON API to convert array Java objects into JSON string -->
	<dependency>
	  	<groupId>com.google.code.gson</groupId>
	  	<artifactId>gson</artifactId>
	</dependency>
	<!-- this resolved the missing implementation from GSON API usage -->
	<dependency>
  		<groupId>org.glassfish</groupId>
  		<artifactId>javax.json</artifactId>
  		<version>1.1.4</version>
	</dependency>
	<!-- JACKSON -->
	<dependency>
	    <groupId>com.fasterxml.jackson.core</groupId>
	    <artifactId>jackson-databind</artifactId>
	</dependency>
	
	<!-- Mailing -->
	<dependency>
    	<groupId>com.sun.mail</groupId>
        <artifactId>javax.mail</artifactId>
    </dependency>
	
	
	
 	<!-- SonarQube for static analysis -->
	<dependency>
    	<groupId>org.sonarsource.sonarqube</groupId>
    	<artifactId>sonar-xoo-plugin</artifactId>
    	<version>6.5</version>
    	<scope>test</scope>
	</dependency>
	
	
	
  </dependencies>
  
  
  <build>
  <plugins>
  
      <!-- Select the jdk -->
      <plugin>
          <groupId>org.apache.maven.plugins</groupId>
		  <artifactId>maven-compiler-plugin</artifactId>
		  <configuration>
			  <source>${jdk.version}</source>
			  <target>${jdk.version}</target>
			  <fork>true</fork>
                  <executable>${jdk.path}</executable>
		  </configuration>
	  </plugin>
	
	  <!-- Generate javadoc documentation with UML diagrams javadoc:javadoc-->
      <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <configuration>
              <doclet>ydoc.doclets.YStandard</doclet>
                  <docletPath>${yDoc.path}/lib/ydoc.jar:${yDoc.path}/lib/styleed.jar:${yDoc.path}/resources</docletPath>
              <additionalparam>-umlautogen</additionalparam>
          </configuration>
      </plugin>
    
      <!-- Sonar, static analysis- sonar:sonar-->
      <plugin>
          <groupId>org.sonarsource.scanner.maven</groupId>
          <artifactId>sonar-maven-plugin</artifactId>
          <version>3.6.0.1398</version>
      </plugin>
      
       <plugin>
		    <groupId>org.jacoco</groupId>
		    <artifactId>jacoco-maven-plugin</artifactId>
		    <version>0.7.7.201606060606</version>
		    <configuration>
			    <excludes>
			        <exclude>src/main/resources/**</exclude>
			        <exclude>src/main/test/**</exclude>
			        <exclude>src/main/test/**</exclude>
			        <exclude>target/**</exclude>
			        <exclude>src/main/webapp/**/*</exclude>
			    </excludes>
			</configuration>
		    <executions>
		        <execution>
		            <goals>
		                <goal>prepare-agent</goal>
		            </goals>
		        </execution>
		        <execution>
		            <id>report</id>
		            <phase>prepare-package</phase>
		            <goals>
		                <goal>report</goal>
		            </goals>
		        </execution>
		    </executions>
	</plugin>
       
      
  </plugins>
  </build>
  
</project>